// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mng_shifts.Data;

#nullable disable

namespace Mng_shifts.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250616091900_1218")]
    partial class _1218
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mng_shifts.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Mng_shifts.Core.Entities.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("Mng_shifts.Core.Entities.SwapProposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProposedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProposedShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SwapRequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProposedShiftId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("SwapRequestId");

                    b.ToTable("SwapProposal");
                });

            modelBuilder.Entity("Mng_shifts.Core.Entities.SwapRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId")
                        .IsUnique();

                    b.ToTable("SwapRequest");
                });

            modelBuilder.Entity("Mng_shifts.Core.Entities.Shift", b =>
                {
                    b.HasOne("Mng_shifts.Core.Entities.Employee", "Employee")
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Mng_shifts.Core.Entities.SwapProposal", b =>
                {
                    b.HasOne("Mng_shifts.Core.Entities.Employee", null)
                        .WithMany("SwapProposal")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Mng_shifts.Core.Entities.Shift", "ProposedShift")
                        .WithMany()
                        .HasForeignKey("ProposedShiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mng_shifts.Core.Entities.Shift", null)
                        .WithMany("SwapProposals")
                        .HasForeignKey("ShiftId");

                    b.HasOne("Mng_shifts.Core.Entities.SwapRequest", "SwapRequest")
                        .WithMany("SwapProposals")
                        .HasForeignKey("SwapRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProposedShift");

                    b.Navigation("SwapRequest");
                });

            modelBuilder.Entity("Mng_shifts.Core.Entities.SwapRequest", b =>
                {
                    b.HasOne("Mng_shifts.Core.Entities.Shift", "Shift")
                        .WithOne("SwapRequest")
                        .HasForeignKey("Mng_shifts.Core.Entities.SwapRequest", "ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("Mng_shifts.Core.Entities.Employee", b =>
                {
                    b.Navigation("Shifts");

                    b.Navigation("SwapProposal");
                });

            modelBuilder.Entity("Mng_shifts.Core.Entities.Shift", b =>
                {
                    b.Navigation("SwapProposals");

                    b.Navigation("SwapRequest")
                        .IsRequired();
                });

            modelBuilder.Entity("Mng_shifts.Core.Entities.SwapRequest", b =>
                {
                    b.Navigation("SwapProposals");
                });
#pragma warning restore 612, 618
        }
    }
}
